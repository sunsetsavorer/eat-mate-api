openapi: 3.1.0
info:
  version: '1'
  title: 'Eat Mate API'
  description: |
    Eat Mate API
  contact:
    name: 'github'
    url: 'https://github.com/sunsetsavorer'

tags:
  - name: 'Auth'
    description: 'authorization operations'
  - name: 'User'
    description: 'user operations'
  - name: 'PlaceBranch'
    description: 'place branch operations'

paths:
  /v1/auth/signin:
    post:
      summary: 'return JWT token'
      tags:
        - Auth
      requestBody:
        $ref: '#/components/requestBodies/Signin'
      responses:
        200:
          $ref: '#/components/responses/Signin'
        400:
          $ref: '#/components/responses/BadRequestError'
        422:
          $ref: '#/components/responses/ValidationError'

  /v1/users/me:
    put:
      summary: 'update user'
      tags:
        - User
      requestBody:
        $ref: '#/components/requestBodies/UpdateUser'
      responses:
        200:
          $ref: '#/components/responses/EmptySuccess'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        422:
          $ref: '#/components/responses/ValidationError'
      security:
        - JWT: []

  /v1/place_branches/:
    get:
      summary: 'get place branches'
      tags:
        - PlaceBranch
      responses:
        200:
          $ref: '#/components/responses/GetPlaceBranches'

components:
  schemas:
    BaseErrorResponse:
      type: object
      properties:
        errors: {type: object}

    EmptySuccessResponse:
      type: object
      properties:
        data: {type: object}

    SigninRequestBody:
      type: object
      properties:
        telegram_id: {type: number}
        name: {type: string}
        photo_url: {type: string}
      required:
        - telegram_id
        - name

    SigninResponse:
      type: object
      properties:
        data:
          type: object
          properties:
            token:
              $ref: '#/components/schemas/JWTToken'

    JWTToken:
      type: string

    UpdateUserRequestBody:
      type: object
      properties:
        name: {type: string}
        photo_url: {type: string}
      required:
        - name

    GetPlaceBranchesResponse:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/PlaceBranchesResponseItem'

    PlaceBranchesResponseItem:
      type: object
      properties:
        id:
          type: string
          format: uuid
        icon_path: {type: string}
        name: {type: string}
        address: {type: string}

  examples:
    BadRequestErrorResponse:
      value:
        errors:
          other: 'bad request'

    UnauthorizedErrorResponse:
      value:
        errors:
          other: 'not authorized'

    NotFoundErrorResponse:
      value:
        errors:
          other: 'not found'

    ValidationErrorResponse:
      value:
        errors:
          field1: 'this field is required'
          field2: 'this field has wrong format'

    EmptySuccessResponse:
      value:
        data: null

    SigninRequestBody:
      value:
        telegram_id: 576098928
        name: 'sunsetsavorer'
        photo_url: 'https://example.com/avatars/sunsetsavorer.svg'

    SigninResponse:
      value:
        data:
          token: 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiYWRtaW4iOnRydWUsImlhdCI6MTUxNjIzOTAyMn0.KMUFsIDTnFmyG3nMiGM6H9FNFUROf3wh7SmqJp-QV30'

    UpdateUserRequestBody:
      value:
        name: 'updated_sunsetsavorer'
        photo_url: 'https://example.com/avatars/updated_sunsetsavorer.svg'

    GetPlaceBranchesResponse:
      value:
        data:
          - id: '6310cc48-4833-46c9-9464-da30ec2b117f'
            icon_path: '/icons/place_branches/kfc.svg'
            name: 'KFC'
            address: 'Pr Dovatora'
            contact_phone: '8 (800) 535-35-35'
          - id: '8c92f3ea-449a-4c40-a84e-03dd9fbdac59'
            icon_path: null
            name: 'Siria Bistro'
            address: 'Vladikavkazskaya Ulitsa, 35'
            contact_phone: '8 (918) 826-94-54'

  requestBodies:
    Signin:
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/SigninRequestBody'
          examples:
            Base:
              $ref: '#/components/examples/SigninRequestBody'

    UpdateUser:
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/UpdateUserRequestBody'
          examples:
            Base:
              $ref: '#/components/examples/UpdateUserRequestBody'

  responses:
    BadRequestError:
      description: 'bad request error response'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/BaseErrorResponse'
          examples:
            Base:
              $ref: '#/components/examples/BadRequestErrorResponse'

    UnauthorizedError:
      description: 'not authorized error response'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/BaseErrorResponse'
          examples:
            Base:
              $ref: '#/components/examples/UnauthorizedErrorResponse'

    NotFoundError:
      description: 'not found error response'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/BaseErrorResponse'
          examples:
            Base:
              $ref: '#/components/examples/NotFoundErrorResponse'

    ValidationError:
      description: 'validation error response'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/BaseErrorResponse'
          examples:
            Base:
              $ref: '#/components/examples/ValidationErrorResponse'

    EmptySuccess:
      description: 'empty success response'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/EmptySuccessResponse'
          examples:
            Base:
              $ref: '#/components/examples/EmptySuccessResponse'

    Signin:
      description: 'success authorization'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/SigninResponse'
          examples:
            Base:
              $ref: '#/components/examples/SigninResponse'

    GetPlaceBranches:
      description: 'success request'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/GetPlaceBranchesResponse'
          examples:
            Base:
              $ref: '#/components/examples/GetPlaceBranchesResponse'

  securitySchemes:
    JWT:
      type: apiKey
      in: header
      name: Authorization